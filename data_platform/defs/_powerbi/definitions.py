from time import sleep
from datetime import timedelta

import dagster as dg

# dagster has an integration with powerbi, these are just
# asset stubs for demonstration, would actually be connected in production
# with assets generated by a factory.


@dg.asset(
    key=["bi", "sm", "core_semantic_model"],
    deps=[
        ["common", "fct", "fct_transaction"],
        ["common", "dim", "dim_customer"]
    ],
    owners=["analytics@email.com"],
    kinds={"powerbi"},
    group_name="bi",
    automation_condition=dg.AutomationCondition.eager(),
    description="This is the core semantic model that is used by business leadership to self serve analtics"
)
def bi_sm_core_semantic_model(context: dg.AssetExecutionContext) -> None:
    context.log.info("refreshing powerbi semantic model")
    sleep(10)
    context.log.info("refresh complete")
    return None

executive_dashboard_freshness = dg.build_last_update_freshness_checks(
    assets=[bi_sm_core_semantic_model],
    lower_bound_delta=timedelta(days=1)
)



bi_exp_executive_dashboard = dg.AssetSpec(
    key=["bi", "exp", "executive_dashboard"],
    deps=[
        ["bi", "sm", "core_semantic_model"],
    ],
    kinds={"powerbi"},
    group_name="bi"
)

bi_exp_daily_metrics = dg.AssetSpec(
    key=["bi", "exp", "daily_metrics"],
    deps=[
        ["bi", "sm", "core_semantic_model"],
    ],
    kinds={"powerbi"},
    group_name="bi"
)

bi_exp_weekly_metrics = dg.AssetSpec(
    key=["bi", "exp", "weekly_metrics"],
    deps=[
        ["bi", "sm", "core_semantic_model"],
    ],
    kinds={"powerbi"},
    group_name="bi"
)